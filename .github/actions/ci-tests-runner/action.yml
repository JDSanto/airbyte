name: "Setup CI Tests Env"
description: "Setup CI Tests Env for all module types"
inputs:
  module-name:
    description: "Unique module name. e.g.: connectors/source-s3, connectors/destination-s3"
    required: true
  module-folder:
    description: "Path to module folder"
    required: true
  module-lang:
    description: "Detected module language. Available values: py, java"
    required: true
  sonar-host:
    required: true
  sonar-token:
    description: "Access token for using SonarQube API"
    required: true
  pull-request-id:
    description: "Unique PR ID. For example: airbyte/1234"
    default: "0"
  token:
    required: true
  remove-sonar-project:
    description: "This flag should be used if needed to remove sonar project after using"
    default: false
runs:
  using: "composite"
  steps:

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Tests of CI
      shell: bash
      run: |
        # all CI python packages have the prefix "ci_"
        pip install --quiet tox==3.24.4
        tox -r -c ./tools/tox_ci.ini
        pip install --quiet -e ./tools/ci_*

    - name: Python Tests
      id: ci-py-tests
      if: ${{ inputs.module-lang == 'py' }}
      uses: ./.github/actions/ci-py-tests
      with:
        module-name: ${{ inputs.module-name }}
        module-folder: ${{ inputs.module-folder }}

    - name: Java Tests
      id: ci-java-tests
      if: ${{ inputs.module-lang == 'java' }}
      uses: ./.github/actions/ci-java-tests
      with:
        module-name: ${{ inputs.module-name }}
        module-folder: ${{ inputs.module-folder }}

    - name: Prepare External Issues
      shell: bash
      id: external-issues
      working-directory: ${{ inputs.module-folder }}
      run: |
        REPORT_FOLDER=reports
        mkdir -p ${REPORT_FOLDER}
        [ -f ${{ steps.ci-py-tests.outputs.mypy-logs }} ] && ci_sonar_qube --mypy_log ${{ steps.ci-py-tests.outputs.mypy-logs }} --output_file ${REPORT_FOLDER}/issues_mypy.json --host ${{ inputs.sonar-host }} --token ${{ inputs.sonar-token }}
        echo "::set-output name=external_issues_folder::$REPORT_FOLDER/issues_mypy.json"

    - name: Create SonarQube Project
      shell: bash
      id: create-sq-project
      run: |
        ci_sonar_qube --pr ${{ inputs.pull-request-id }} --create --module ${{ inputs.module-name }} --host ${{ inputs.sonar-host }} --token ${{ inputs.sonar-token }}
        echo "::set-output name=sq_project_name::$(ci_sonar_qube --pr ${{ inputs.pull-request-id }} --print_key --module ${{ inputs.module-name }})"

    - name: SonarQube Scan
      # test for Python only
      if: ${{ inputs.module-lang == 'py' }}
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host }}
      with:
          projectBaseDir: ${{ inputs.module-folder }}
          args: >
            -Dsonar.projectKey=${{ steps.create-sq-project.outputs.sq_project_name }}
            -Dsonar.verbose=true
            -Dsonar.working.directory=/tmp/scannerwork
            -Dsonar.language=${{ inputs.module-lang }}
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.projectBaseDir=${{ inputs.module-folder }}
            -Dsonar.exclusions=reports/**,*.toml
            -Dsonar.python.coverage.reportPaths=${{ steps.ci-py-tests.outputs.coverage-paths }}
            -Dsonar.externalIssuesReportPaths=${{ steps.external-issues.outputs.external_issues_folder }}
            ${{ steps.ci-py-tests.outputs.linter-reports }}

    - name: Generate SonarQube Report
      shell: bash
      id: generate-sq-report
      run: |
        sleep 10
        REPORT_FILE=/tmp/sq_report_$RANDOM.md
        ci_sonar_qube --pr ${{ inputs.pull-request-id }} --report ${REPORT_FILE} --module ${{ inputs.module-name }} --host ${{ inputs.sonar-host }} --token ${{ inputs.sonar-token }}
        body="$(cat ${REPORT_FILE})"
        body="${body//'%'/'%25'}"
        body="${body//$'\n'/'%0A'}"
        body="${body//$'\r'/'%0D'}"
        echo "::set-output name=sq-report::$body"

    - name: Add Comment
      if: ${{ inputs.module-lang == 'py' }}
      uses: unsplash/comment-on-pr@v1.3.0
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      with:
        check_for_duplicate_msg: false
        msg: ${{ steps.generate-sq-report.outputs.sq-report }}

    - name: Remove SonarQube Project
      if: ${{ inputs.remove-sonar-project == true }}
      shell: bash
      id: remove-sq-project
      run: |
        ci_sonar_qube --pr ${{ inputs.pull-request-id }} --remove --module ${{ inputs.module-name }} --host ${{ inputs.sonar-host }} --token ${{ inputs.sonar-token }}

